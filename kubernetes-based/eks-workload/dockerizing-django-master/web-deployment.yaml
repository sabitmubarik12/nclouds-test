apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: web
    spec:
      containers:
      - args:
        - /usr/local/bin/gunicorn
        - docker_django.wsgi:application
        - -w
        - "2"
        - -b
        - :8000
        env:
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: env
        - name: DB_PASS
          valueFrom:
            configMapKeyRef:
              key: DB_PASS
              name: env
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: DB_PORT
              name: env
        - name: DB_SERVICE
          valueFrom:
            configMapKeyRef:
              key: DB_SERVICE
              name: env
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              key: DB_USER
              name: env
        - name: DEBUG
          value: "true"
        - name: POSTGRES_DATABASE
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DATABASE
              name: env
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_HOST
              name: env
        - name: POSTGRES_HOST_AUTH_METHOD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_HOST_AUTH_METHOD
              name: env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: env
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PORT
              name: env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: env
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_HOST
              name: env
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              key: REDIS_PORT
              name: env
        - name: SECRET_KEY
          valueFrom:
            configMapKeyRef:
              key: SECRET_KEY
              name: env
        image: public.ecr.aws/p4y8m7h4/sabit:latest
        imagePullPolicy: ""
        name: web
        ports:
        - containerPort: 8000
        resources: {}
        volumeMounts:
        - mountPath: /usr/src/app
          name: web-django
        - mountPath: /usr/src/app/static
          name: web-static
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: web-django
        persistentVolumeClaim:
          claimName: web-django
      - name: web-static
        persistentVolumeClaim:
          claimName: web-static
status: {}
